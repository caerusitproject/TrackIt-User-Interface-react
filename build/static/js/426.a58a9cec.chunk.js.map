{"version":3,"file":"static/js/426.a58a9cec.chunk.js","mappings":"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","sources":["styled_components/mytasks.styled.js","Components/Requests/MyTaskAddition.js","styled_components/requesttable.styled.js","Components/Requests/RequestsTable.js","Components/Requests/RequestPage.js"],"sourcesContent":["\r\nimport styled from \"styled-components\";\r\n\r\nexport const TasksPanel = styled.div`\r\n  padding:3px;\r\n  background: #fff;\r\n  border: 1.3px solid #c4c4c4;\r\n  border-radius: 7px;\r\n  min-width: 300px;\r\n  max-width: 310px;\r\n  min-height: 460px;\r\n  height: 390px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-shadow: 0 2px 8px #dfdfdf55;\r\n`;\r\n\r\nexport const IconButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  svg {\r\n    font-size: 1.06em;\r\n    color: #abb2be;\r\n  }\r\n`;\r\n\r\nexport const TasksHeader = styled.div`\r\n  background: #f6f6fa;\r\n  padding: 10px 14px 10px 16px;\r\n  border-bottom: 1px solid #e3e3e3;\r\n  font-weight: 600;\r\n  font-size: 1.07em;\r\n  letter-spacing: 0.04em;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n`;\r\n\r\nexport const IconGroup = styled.div`\r\n  margin-left: auto;\r\n  display: flex;\r\n  gap: 7px;\r\n  svg {\r\n    color: #959596;\r\n    font-size: 1.05em;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const TasksToolbar = styled.div`\r\n  padding: 6px 14px;\r\n  background: #fcfcfe;\r\n  border-bottom: 1px solid #e3e3e3;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 7px;\r\n`;\r\n\r\nexport const ToolbarSelect = styled.select`\r\n  font-size: 0.97em;\r\n  min-width: 100px;\r\n  padding: 3px 9px;\r\n  border-radius: 6px;\r\n`;\r\n\r\n\r\n\r\nexport const TasksContent = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const EmptyImage = styled.img`\r\n  width: 60px;\r\n  opacity: 0.94;\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nexport const EmptyText = styled.div`\r\n  color: #686a71;\r\n  font-size: 1.09em;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nexport const NewTaskButton = styled.button`\r\n  cursor:pointer;\r\n  border: 1.2px solid #b0b6c6;\r\n  color: #2746bb;\r\n  background: #f6fafd;\r\n  border-radius: 6px;\r\n  padding: 4px 18px;\r\n  font-size: 1.01em;\r\n  font-weight: 500;\r\n  display:flex;\r\n  justify-contents:center;\r\n  align-items:center;\r\n  transition: background 0.13s;\r\n  &:hover {\r\n    background: #edecf8;\r\n    border-color: #2744ae;\r\n    color: #183089;\r\n  }\r\n`;\r\n\r\nexport const TasksFooter = styled.div`\r\n  background: #fafafd;\r\n  border-top: 1px solid #e3e3e3;\r\n  padding: 5px 14px;\r\n  font-size: 0.97em;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const PageControls = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 13px;\r\n  button {\r\n    background: none;\r\n    border: none;\r\n    font-size: 1.3em;\r\n    cursor: pointer;\r\n    color: #777;\r\n  }\r\n`;","import React, { useState } from \"react\";\r\nimport {\r\n  TasksPanel,\r\n  TasksHeader,\r\n  IconGroup,\r\n  TasksToolbar,\r\n  TasksContent,\r\n  EmptyImage,\r\n  EmptyText,\r\n  NewTaskButton,\r\n  TasksFooter,\r\n  PageControls\r\n} from \"../../styled_components/mytasks.styled\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\r\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport NavigateBeforeIcon from \"@mui/icons-material/NavigateBefore\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CollapsiblePanel = styled(TasksPanel)`\r\n  transition: width 0.3s ease;\r\n  overflow: hidden;\r\n  ${({ collapsed }) =>\r\n    collapsed\r\n      ? `\r\n    width: 50px;\r\n    min-width: 50px;\r\n  `\r\n      : `\r\n    width: 100%;\r\n  `}\r\n`;\r\n\r\nconst CollapseButton = styled(IconButton)`\r\n  margin-right: 8px;\r\n  transition: transform 0.3s ease;\r\n  ${({ collapsed }) => (collapsed ? \"transform: rotate(180deg);\" : \"\")}\r\n`;\r\n\r\nexport default function MyAllTasks() {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  return (\r\n    <CollapsiblePanel collapsed={collapsed}>\r\n      <TasksHeader>\r\n        {!collapsed && \"My All Tasks\"}\r\n        <IconGroup>\r\n         \r\n          {!collapsed && (\r\n            <>\r\n              <IconButton>\r\n                <SearchIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <RefreshIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <OpenInNewIcon />\r\n              </IconButton>\r\n            </>\r\n          )}\r\n           <CollapseButton\r\n            onClick={() => setCollapsed((prev) => !prev)}\r\n            collapsed={collapsed ? 1 : 0}\r\n          >\r\n            <NavigateBeforeIcon />\r\n          </CollapseButton>\r\n        </IconGroup>\r\n      </TasksHeader>\r\n\r\n      {!collapsed && (\r\n        <>\r\n          <TasksToolbar>\r\n            <FormControl\r\n              fullWidth\r\n              sx={{\r\n                \"& .MuiInputLabel-root\": {\r\n                  top: -5,\r\n                  fontSize: \"0.85rem\"\r\n                },\r\n                \"& .MuiSelect-select\": {\r\n                  padding: \"8px 12px\",\r\n                  minHeight: \"40px !important\"\r\n                },\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  height: 40\r\n                }\r\n              }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-label\">Task</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                label=\"Task\"\r\n              >\r\n                <MenuItem value={10}>Ten</MenuItem>\r\n                <MenuItem value={20}>Twenty</MenuItem>\r\n                <MenuItem value={30}>Thirty</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </TasksToolbar>\r\n\r\n          <TasksContent>\r\n            <EmptyImage\r\n              src=\"https://img.icons8.com/ios-filled/100/clipboard.png\"\r\n              alt=\"No tasks\"\r\n            />\r\n            <EmptyText>There are no tasks in this view</EmptyText>\r\n            <NewTaskButton>\r\n              <AddCircleOutlineIcon /> New Task\r\n            </NewTaskButton>\r\n          </TasksContent>\r\n\r\n          <TasksFooter>\r\n            <div>\r\n              <select style={{ width: \"58px\", height: \"28px\" }}>\r\n                <option>25</option>\r\n                <option>50</option>\r\n                <option>100</option>\r\n              </select>\r\n              <span style={{ marginLeft: \"8px\" }}>• 0 - 0</span>\r\n            </div>\r\n            <PageControls>\r\n              <button title=\"Prev\">\r\n                <ArrowBackIosIcon />\r\n              </button>\r\n              <button title=\"Next\">\r\n                <ArrowForwardIosIcon />\r\n              </button>\r\n            </PageControls>\r\n          </TasksFooter>\r\n        </>\r\n      )}\r\n    </CollapsiblePanel>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { TableRow,TableCell,TableContainer } from \"@mui/material\";\r\nexport const HeaderBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 8px 12px;\r\n  background: #f1f3f5;\r\n  border-bottom: 1px solid #ddd;\r\n  font-weight: 500;\r\n  gap: 8px;\r\n`;\r\n\r\nexport const Toolbar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 6px 12px;\r\n  background: #f8f9fa;\r\n  border-bottom: 1px solid #ddd;\r\n  gap: 8px;\r\n`;\r\n\r\nexport const StyledTableContainer = styled(TableContainer)`\r\n  border: 1px solid #ddd;\r\n  border-radius: 6px;\r\n  overflow: hidden;\r\n  width: 100%;\r\n`;\r\n\r\nexport const StyledHeaderRow = styled(TableRow)`\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nexport const StyledHeaderCell = styled(TableCell)`\r\n  font-weight: bold;\r\n  color: #333;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const StyledRow = styled(TableRow)`\r\n  &:nth-of-type(even) {\r\n    background-color: #fafafa;\r\n  }\r\n  &:hover {\r\n    background-color: #f0f7ff;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const StyledCell = styled(TableCell)`\r\n  font-size: 14px;\r\n  color: #555;\r\n`;\r\n\r\nexport const YellowDot = styled.span`\r\n  display: inline-block;\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: #ffcd00;\r\n  border-radius: 50%;\r\n  margin-right: 8px;\r\n`;","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Paper,\r\n  IconButton,\r\n  TablePagination,\r\n  TableFooter,\r\n  Typography,\r\n  CircularProgress,\r\n  Checkbox\r\n} from \"@mui/material\";\r\nimport FolderIcon from \"@mui/icons-material/Folder\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport {\r\n  Box\r\n} from \"@mui/material\";\r\nimport {\r\n  FirstPage as FirstPageIcon,\r\n  LastPage as LastPageIcon,\r\n  KeyboardArrowLeft,\r\n  KeyboardArrowRight\r\n} from \"@mui/icons-material\";\r\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\nimport FilterAltIcon from \"@mui/icons-material/FilterAlt\";\r\nimport { Button } from \"@mui/material\";\r\nimport {\r\nHeaderBar,\r\nToolbar,\r\nStyledTableContainer,\r\nStyledHeaderRow,\r\nStyledHeaderCell,\r\nStyledRow,\r\nStyledCell,\r\nYellowDot\r\n} from \"../../styled_components/requesttable.styled\"\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction TablePaginationActions(props) {\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n  const handleFirst = (e) => onPageChange(e, 0);\r\n  const handleBack = (e) => onPageChange(e, page - 1);\r\n  const handleNext = (e) => onPageChange(e, page + 1);\r\n  const handleLast = (e) => {\r\n    const lastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\r\n    onPageChange(e, lastPage);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\r\n      <IconButton onClick={handleFirst} disabled={page === 0}>\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBack} disabled={page === 0}>\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNext}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n      >\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLast}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default function RequestsTable() {\r\n  const navigate = useNavigate();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [rows, setRows] = useState([]);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // ✅ Selection State\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const fetchPage = async (page, limit) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const offset = page * limit;\r\n      const resp = await fetch(`http://localhost:3000/posts?_start=${offset}&_limit=${limit}`);\r\n      if (!resp.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n      const json = await resp.json();\r\n      setRows(json);\r\n\r\n      const total = resp.headers.get(\"X-Total-Count\") || json.total || 15;\r\n      setTotalCount(Number(total));\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPage(page, rowsPerPage);\r\n  }, [page, rowsPerPage]);\r\n\r\n  const handleChangePage = (_, newPage) => setPage(newPage);\r\n  const handleChangeRowsPerPage = (e) => {\r\n    setRowsPerPage(parseInt(e.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  // ✅ Handle Select All\r\n  const handleSelectAll = (event) => {\r\n    if (event.target.checked) {\r\n      const allIds = rows.map((row) => row.id);\r\n      setSelected(allIds);\r\n    } else {\r\n      setSelected([]);\r\n    }\r\n  };\r\n\r\n  // ✅ Handle Individual Row Selection\r\n  const handleSelectRow = (id) => {\r\n    setSelected((prev) =>\r\n      prev.includes(id) ? prev.filter((sid) => sid !== id) : [...prev, id]\r\n    );\r\n  };\r\n\r\n  const isSelected = (id) => selected.includes(id);\r\n\r\n  const handleRedirect = (id)=>{\r\n    navigate(`/ticket/${id}`)\r\n  }\r\n\r\n  return (\r\n    <StyledTableContainer component={Paper}>\r\n      <HeaderBar>\r\n        <FolderIcon />\r\n        My Completed Requests\r\n        <span style={{ flex: 1 }} />\r\n        <Button variant=\"outlined\" size=\"small\">\r\n          <RefreshIcon />\r\n        </Button>\r\n        <Button variant=\"outlined\" size=\"small\">\r\n          <SettingsIcon />\r\n        </Button>\r\n        <Button variant=\"outlined\" size=\"small\">\r\n          <FilterAltIcon />\r\n        </Button>\r\n      </HeaderBar>\r\n\r\n      <Toolbar>\r\n        <input type=\"text\" placeholder=\"Search...\" style={{ width: 170 }} />\r\n        <select style={{ width: 95 }}>\r\n          <option>All</option>\r\n          <option>Open</option>\r\n          <option>Closed</option>\r\n        </select>\r\n        <span style={{ flex: 1 }} />\r\n      </Toolbar>\r\n\r\n      <Table aria-label=\"completed requests table\" style={{ width: \"100%\" }}>\r\n        <TableBody>\r\n          {loading ? (\r\n            <TableRow>\r\n              <TableCell colSpan={5} align=\"center\">\r\n                <CircularProgress />\r\n              </TableCell>\r\n            </TableRow>\r\n          ) : error ? (\r\n            <TableRow>\r\n              <TableCell colSpan={5} align=\"center\" sx={{ color: \"error.main\" }}>\r\n                {error}\r\n              </TableCell>\r\n            </TableRow>\r\n          ) : rows.length === 0 ? (\r\n            <TableRow>\r\n              <TableCell colSpan={5} align=\"center\">\r\n                <Typography>No data available</Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          ) : (\r\n            <>\r\n              {/* ✅ Table Header with Select All */}\r\n              <StyledHeaderRow>\r\n                <StyledHeaderCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={rows.length > 0 && selected.length === rows.length}\r\n                    indeterminate={selected.length > 0 && selected.length < rows.length}\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </StyledHeaderCell>\r\n                <StyledHeaderCell>ID</StyledHeaderCell>\r\n                <StyledHeaderCell>First Name</StyledHeaderCell>\r\n                <StyledHeaderCell>Last Name</StyledHeaderCell>\r\n              </StyledHeaderRow>\r\n\r\n              {/* ✅ Table Data with Row Checkboxes */}\r\n              {rows.map((row) => (\r\n                <StyledRow key={row.id} selected={isSelected(row.id)} onClick={() => handleRedirect(row.id)}>\r\n                  <StyledCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={isSelected(row.id)}\r\n                      onClick={(e) => e.stopPropagation()}   // Prevent row click\r\n                      onChange={() => handleSelectRow(row.id)}\r\n                    />\r\n                  </StyledCell>\r\n                  <StyledCell>\r\n                    <YellowDot />\r\n                    {row.id}\r\n                  </StyledCell>\r\n                  <StyledCell>{row.firstName}</StyledCell>\r\n                  <StyledCell>{row.lastName}</StyledCell>\r\n                </StyledRow>\r\n\r\n              ))}\r\n            </>\r\n          )}\r\n        </TableBody>\r\n\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\r\n              colSpan={5}\r\n              count={totalCount}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </StyledTableContainer>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Navbar from '../HomePage/Navbar'\r\nimport MyTaskAddition from './MyTaskAddition'\r\nimport RequestsTable from \"./RequestsTable\"\r\nimport styled from 'styled-components'\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  // margin-top:10px;\r\n  gap: 20px; /* only affects desktop horizontal gap */\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    flex-wrap:wrap;\r\n    align-items:center;\r\n    gap: 10; /* no vertical gap */\r\n  }\r\n`;\r\n\r\nexport default function Request() {\r\n  return (\r\n    <div>\r\n      {/* <Navbar/> */}\r\n      <ContentWrapper>\r\n        <MyTaskAddition/>\r\n        <RequestsTable/>\r\n      </ContentWrapper>\r\n      {/* <div style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\", gap:\"20px\"}}> */}\r\n\r\n      {/* </div> */}\r\n    </div>\r\n  )\r\n}\r\n"],"names":["TasksPanel","styled","div","TasksHeader","button","IconGroup","TasksToolbar","TasksContent","select","EmptyImage","img","EmptyText","NewTaskButton","TasksFooter","PageControls","CollapsiblePanel","_ref","collapsed","CollapseButton","IconButton","_ref2","MyAllTasks","setCollapsed","useState","_jsxs","children","_Fragment","_jsx","SearchIcon","RefreshIcon","OpenInNewIcon","onClick","prev","NavigateBeforeIcon","FormControl","fullWidth","sx","top","fontSize","padding","minHeight","height","InputLabel","id","Select","labelId","label","MenuItem","value","src","alt","AddCircleOutlineIcon","style","width","marginLeft","title","ArrowBackIosIcon","ArrowForwardIosIcon","HeaderBar","Toolbar","StyledTableContainer","TableContainer","StyledHeaderRow","TableRow","StyledHeaderCell","TableCell","StyledRow","StyledCell","YellowDot","span","TablePaginationActions","props","theme","useTheme","count","page","rowsPerPage","onPageChange","Box","flexShrink","ml","e","disabled","direction","LastPageIcon","FirstPageIcon","KeyboardArrowRight","KeyboardArrowLeft","Math","ceil","lastPage","max","RequestsTable","navigate","useNavigate","setPage","setRowsPerPage","rows","setRows","totalCount","setTotalCount","loading","setLoading","error","setError","selected","setSelected","useEffect","async","limit","offset","resp","fetch","ok","Error","json","total","headers","get","Number","err","message","fetchPage","isSelected","includes","component","Paper","FolderIcon","flex","Button","variant","size","SettingsIcon","FilterAltIcon","type","placeholder","Table","TableBody","colSpan","align","CircularProgress","color","length","Typography","Checkbox","checked","indeterminate","onChange","event","target","allIds","map","row","handleRedirect","stopPropagation","handleSelectRow","filter","sid","firstName","lastName","TableFooter","TablePagination","rowsPerPageOptions","handleChangePage","_","newPage","onRowsPerPageChange","parseInt","ActionsComponent","ContentWrapper","Request","MyTaskAddition"],"sourceRoot":""}